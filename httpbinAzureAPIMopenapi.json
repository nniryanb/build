{
    "openapi": "3.0.1",
    "info": {
        "title": "httpbin build Azure",
        "description": "An unofficial OpenAPI definition for [httpbin.org](https://httpbin.org).",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://nnpov005.azure-api.net/httpbin4build"
        }
    ],
    "paths": {
        "/get": {
            "get": {
                "tags": [
                    "HTTP methods"
                ],
                "summary": "Returns the GET request's data. Accepts any query parameters and any headers.\n",
                "description": "Returns the GET request's data. Accepts any query parameters and any headers.\n",
                "operationId": "get-get",
                "parameters": [
                    {
                        "name": "freeform",
                        "in": "query",
                        "description": "Enter free-form query parameters in the JSON format `{ \"param1\": \"value1\", \"param2\": \"value2\", ... }`.\n\nNote that the parameters will be actually sent as `?param1=value1&param2=value2&...`\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGet200ApplicationJsonResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "tags": [
                    "HTTP methods"
                ],
                "summary": "Returns the DELETE request's data. Accepts any query parameters and any headers.\n",
                "description": "Returns the DELETE request's data. Accepts any query parameters and any headers.\n",
                "operationId": "delete-delete",
                "parameters": [
                    {
                        "name": "freeform",
                        "in": "query",
                        "description": "Enter free-form query parameters in the JSON format `{ \"param1\": \"value1\", \"param2\": \"value2\", ... }`.\n\nNote that the parameters will be actually sent as `?param1=value1&param2=value2&...`\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/post": {
            "post": {
                "tags": [
                    "HTTP methods"
                ],
                "summary": "Returns the POSTed data",
                "description": "Returns the POSTed data",
                "operationId": "post-post",
                "requestBody": {
                    "description": "Data provided in the request body will be returned in the response.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPostRequest"
                            },
                            "example": {
                                "message": "Hello, world!"
                            }
                        },
                        "application/vnd+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPostRequest"
                            },
                            "example": {
                                "message": "Hello, world!"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPostRequest"
                            },
                            "example": {
                                "message": "Hello, world!"
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPostRequest"
                            },
                            "example": {
                                "message": "Hello, world!"
                            }
                        },
                        "application/x-www-form-urlencoded": {},
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPostRequest"
                            },
                            "example": {
                                "message": "Hello, world!"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonResponse"
                                },
                                "example": {
                                    "args": {},
                                    "headers": {},
                                    "origin": "10.100.10.10, 10.100.10.44, 52.91.14.13",
                                    "url": "https://httpbin.org/post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user-agent": {
            "get": {
                "summary": "Returns the user agent.",
                "description": "Returns the user agent.",
                "operationId": "get-user-agent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-agentGet200ApplicationJsonResponse"
                                },
                                "example": {
                                    "user-agent": "curl/7.37.0"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/headers": {
            "get": {
                "summary": "Returns the request headers.",
                "description": "Returns the request headers.",
                "operationId": "get-headers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeadersGet200ApplicationJsonResponse"
                                },
                                "example": {
                                    "headers": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xml": {
            "get": {
                "summary": "Returns some XML.",
                "description": "Returns some XML.",
                "operationId": "get-xml",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {}
                        }
                    }
                }
            }
        },
        "/html": {
            "get": {
                "summary": "Returns an HTML page",
                "description": "Returns an HTML page",
                "operationId": "get-html",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/html": {}
                        }
                    }
                }
            }
        },
        "/image/{format}": {
            "get": {
                "tags": [
                    "images"
                ],
                "summary": "Returns an image with the specified format.",
                "description": "Returns an image with the specified format.",
                "operationId": "get-image-format",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "enum": [
                                "png",
                                "jpeg",
                                "webp",
                                "svg"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "image/png, image/jpeg, image/webp": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "image/svg+xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "example": "<ImageResponse-png-image>string</ImageResponse-png-image>"
                            },
                            "image/svg": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/image": {
            "get": {
                "tags": [
                    "images"
                ],
                "summary": "Returns an image based on the Accept header.",
                "description": "Returns an image based on the Accept header.",
                "operationId": "get-image",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "image/png, image/jpeg, image/webp": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "image/svg+xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "example": "<ImageResponse-png-image>string</ImageResponse-png-image>"
                            },
                            "image/svg": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResponse-png-image"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Client did not request a supported media type.",
                        "content": {
                            "image/png, image/jpeg, image/webp": {},
                            "image/svg+xml": {},
                            "image/svg": {}
                        }
                    }
                }
            }
        },
        "/cache": {
            "get": {
                "summary": "Returns 200 unless an If-Modified-Since or If-None-Match header is provided, when it returns a 304.",
                "description": "Returns 200 unless an If-Modified-Since or If-None-Match header is provided, when it returns a 304.",
                "operationId": "get-cache",
                "parameters": [
                    {
                        "name": "If-Modified-Since",
                        "in": "header",
                        "description": "For testing purposes this header accepts any value. (???) See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "If-None-Match",
                        "in": "header",
                        "description": "For testing purposes this header accepts any value. (???) See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Neigher If-Modified-Since nor If-None-Match header is provided"
                    },
                    "304": {
                        "description": "If-Modified-Since or If-None-Match header is provided"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CommonResponse": {
                "required": [
                    "args",
                    "headers",
                    "origin",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "args": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query string parameters specified in the request URL."
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Headers (standard or custom) used in the request. Some typical headers are:\n  - Accept\n  - Accept-Encoding\n  - Content-Length\n  - Content-Type\n  - Host\n  - Origin\n  - Referred\n  - User-Agent\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin IP from which the request was made.",
                        "example": "10.100.10.10, 10.100.10.44, 52.91.14.13"
                    },
                    "url": {
                        "type": "string",
                        "description": "The endpoint URL to which the request was made.",
                        "format": "uri",
                        "example": "https://httpbin.org/post"
                    }
                },
                "description": "Response returned by `/get`"
            },
            "PostResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "data": {},
                            "files": {},
                            "form": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Form parameters specified in \"application/x-www-form-urlencoded\" and `multipart/form-data` requests.\n"
                            },
                            "json": {
                                "description": "JSON value sent in the payload. Can be object, array, string, number, boolean or `null`.\n"
                            }
                        }
                    }
                ],
                "description": "Response returned by /post, /put, /patch and /delete"
            },
            "TimestampWrapper": {
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "Timestamp": {
                "required": [
                    "epoch",
                    "slang_date",
                    "slang_time",
                    "iso8601",
                    "rfc2822",
                    "rfc3339"
                ],
                "type": "object",
                "properties": {
                    "epoch": {
                        "type": "number",
                        "format": "double",
                        "example": 1498229228.06717
                    },
                    "slang_date": {
                        "type": "string",
                        "example": "today"
                    },
                    "slang_time": {
                        "type": "string",
                        "example": "now"
                    },
                    "iso8601": {
                        "type": "string",
                        "example": "2017-06-23T14:47:08.067166Z"
                    },
                    "rfc2822": {
                        "type": "string",
                        "example": "Fri, 23 Jun 2017 14:47:08 GMT"
                    },
                    "rfc3339": {
                        "type": "string",
                        "example": "2017-06-23T14:47:08.06Z"
                    }
                },
                "example": {
                    "epoch": 1485183550.84644,
                    "slang_date": "Jan 23",
                    "slang_time": "4 months ago",
                    "iso8601": "2017-01-23T14:59:10.84644Z",
                    "rfc2822": "Mon, 23 Jan 2017 14:59:10 GMT",
                    "rfc3339": "2017-01-23T14:59:10.84Z"
                }
            },
            "Get200ApplicationJsonResponse": {
                "required": [
                    "now",
                    "urls"
                ],
                "type": "object",
                "properties": {
                    "now": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "/",
                            "/docs",
                            "/when/:human-timestamp",
                            "/parse/:machine-timestamp"
                        ]
                    }
                }
            },
            "GetGet200ApplicationJsonResponse": {
                "type": "object"
            },
            "PostPostRequest": {
                "example": {
                    "message": "Hello, world!"
                }
            },
            "PostPostRequest-1": {},
            "PostPostRequest-2": {
                "type": "object"
            },
            "PostPostRequest-3": {
                "type": "string",
                "example": "Hi there"
            },
            "PostPostRequest-4": {},
            "IpGet200ApplicationJsonResponse": {
                "required": [
                    "origin"
                ],
                "type": "object",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The IP address, or a comma-separated list of IP addresses. For example, \"10.100.10.10, 10.100.20.254, 52.91.14.13\"'\n",
                        "example": "10.100.10.10"
                    }
                }
            },
            "User-agentGet200ApplicationJsonResponse": {
                "required": [
                    "user-agent"
                ],
                "type": "object",
                "properties": {
                    "user-agent": {
                        "type": "string",
                        "example": "curl/7.37.0"
                    }
                }
            },
            "HeadersGet200ApplicationJsonResponse": {
                "required": [
                    "headers"
                ],
                "type": "object",
                "properties": {
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "BearerGet200ApplicationJsonResponse": {
                "type": "object",
                "properties": {
                    "authenticated": {
                        "type": "boolean",
                        "example": true
                    },
                    "token": {
                        "type": "string",
                        "description": "Bearer token specified in the request"
                    }
                }
            },
            "200BasicAuthResponse-json": {
                "type": "object",
                "properties": {
                    "authenticated": {
                        "type": "boolean",
                        "example": true
                    },
                    "user": {
                        "type": "string",
                        "description": "The user name specified in the request."
                    }
                }
            },
            "ImageResponse-png-image": {
                "type": "string",
                "format": "binary"
            },
            "TimestampResponseResponse-json": {
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Operations for testing various authentication types"
        },
        {
            "name": "HTTP methods",
            "description": "Operations for testing different HTTP methods"
        },
        {
            "name": "Status codes",
            "description": "Return the specified HTTP status code, or a random status code if more than one are given "
        }
    ]
}
